version: "3.8"

services:
  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - db-net
  db:
    restart: always
    image: postgres
    container_name: db
    volumes:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    command: -p 5432
    networks:
      - db-net

  backend:
    restart: always
    container_name: code
    command : bash -c "python manage.py migrate &
                      python manage.py runserver 0.0.0.0:8000"
    build:
      context: ./shop/
      dockerfile: Dockerfile
    links:
      - db:db
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - db-net

  frontend :
    restart : always
    container_name : front
    command : npm start
    build :
      context : /shop/shop_ui/shop_ui/
      dockerfile : Dockerfile
    ports :
      - "3000:3000"
    stdin_open : true
    depends_on :
      - shop
    networks:
      - db-net

networks:
  db-net:
    driver: bridge

#version: '3'
#
#services:
#  db:
#    restart: always
#    image: postgres
#    volumes:
#      - /var/lib/postgresql/data
#    environment:
#      - POSTGRES_DB=postgres
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_HOST=db
#    ports:
#      - "5432:5432"
#    command: -p 5432
#    networks:
#      - db-net
#  backend:
#    build:
#      context: ./shop/
##      args:
##        DJANGO_ALLOWED_HOSTS: *
##        DJANGO_SECRET_KEY: *
##        DJANGO_CORS_ORIGIN_WHITELIST: *
#    command: bash -c "python manage.py migrate &
#                      python manage.py runserver 0.0.0.0:8000"
#    ports:
#      - "8000:8000"
#    depends_on:
#      - db
#    links:
#      - db:db
#    networks:
#      - db-net
#  frontend:
#    build:
#      context: ./shop/shop_ui/shop_ui
##      args:
##        API_URL: *
#    command: bash -c "npm start"
#    volumes:
#      - build_folder:/frontend/build
#    depends_on:
#      - backend
#    networks:
#      - db-net
#  nginx:
#    image: nginx:latest
#    ports:
#      - 80:8080
#    volumes:
#      - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
#      - build_folder:/var/www/frontend
#    depends_on:
#      - backend
#      - frontend
#    networks:
#      - db-net
#volumes:
#  build_folder:
#networks:
#  db-net:
#    driver: bridge